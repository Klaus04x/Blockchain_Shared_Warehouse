const { ethers } = require('ethers');

async function checkHardhatNodeHealth() {
  console.log('üîç Ki·ªÉm tra s·ª©c kh·ªèe Hardhat node...');
  
  const provider = new ethers.JsonRpcProvider('http://127.0.0.1:8545');
  
  try {
    // Ki·ªÉm tra k·∫øt n·ªëi c∆° b·∫£n
    const blockNumber = await provider.getBlockNumber();
    console.log('‚úÖ Hardhat node ƒëang ch·∫°y. Block hi·ªán t·∫°i:', blockNumber);
    
    // Ki·ªÉm tra gas price
    const gasPrice = await provider.getGasPrice();
    console.log('‚õΩ Gas price:', ethers.formatUnits(gasPrice, 'gwei'), 'Gwei');
    
    // Ki·ªÉm tra network
    const network = await provider.getNetwork();
    console.log('üåê Network:', {
      chainId: network.chainId.toString(),
      name: network.name
    });
    
    // Ki·ªÉm tra m·ªôt s·ªë account
    const accounts = [
      '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',
      '0x70997970C51812dc3A010C7d01b50e0d17dc79C8',
      '0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC'
    ];
    
    console.log('üí∞ Account balances:');
    for (const account of accounts) {
      const balance = await provider.getBalance(account);
      console.log(`  ${account}: ${ethers.formatEther(balance)} ETH`);
    }
    
    // Ki·ªÉm tra contract
    const contractAddress = '0x5FbDB2315678afecb367f032d93F642f64180aa3';
    const code = await provider.getCode(contractAddress);
    if (code === '0x') {
      console.log('‚ùå Contract kh√¥ng t·ªìn t·∫°i t·∫°i address:', contractAddress);
    } else {
      console.log('‚úÖ Contract t·ªìn t·∫°i t·∫°i address:', contractAddress);
    }
    
    console.log('\nüéØ Khuy·∫øn ngh·ªã:');
    console.log('1. Hardhat node ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng');
    console.log('2. Gas price th·∫•p (1 Gwei) - t·ªët cho testing');
    console.log('3. C√°c account c√≥ ƒë·ªß ETH ƒë·ªÉ test');
    console.log('4. Contract ƒë√£ ƒë∆∞·ª£c deploy');
    
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra Hardhat node:', error.message);
    console.log('\nüîß Khuy·∫øn ngh·ªã:');
    console.log('1. Kh·ªüi ƒë·ªông l·∫°i Hardhat node: npx hardhat node');
    console.log('2. Ki·ªÉm tra port 8545 c√≥ b·ªã chi·∫øm kh√¥ng');
    console.log('3. Reset MetaMask account n·∫øu c·∫ßn');
  }
}

checkHardhatNodeHealth();
